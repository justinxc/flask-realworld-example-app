name: Docker Image CI

on:
  push:
    branches:
      - test
    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

env:
  IMAGE_NAME: flask-realworld-example-app
  IMAGE_ID: docker.pkg.github.com/${{ github.repository }}/flask-realworld-example-app

jobs:
  build:
    ### only run while push event in branch test
    if: startsWith(github.ref, 'refs/heads/test')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build the Docker image
        run: |

          ###
          ### build docker image
          ###
          docker build . --file Dockerfile --tag ${IMAGE_NAME}

      - name: Run tests
        run: |

          ###
          ### init variables
          ###
          DOCKER_COMPOSE_FILE=docker-compose.test.yml

          ###
          ### run test cases
          ###
          if [ -f "$DOCKER_COMPOSE_FILE" ];
          then
            docker-compose -f ${DOCKER_COMPOSE_FILE} run test
          else
            echo "OMG!! skip due to no configuration"
          fi

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |

          ###
          ### init variables
          ###
          VERSION=${GITHUB_SHA:0:8}
          IMAGE_ID_VERSION=${IMAGE_ID}:${VERSION}
          echo IMAGE_ID_VERSION: ${IMAGE_ID_VERSION}

          ###
          ### push images to registry
          ###
          docker tag $IMAGE_NAME ${IMAGE_ID_VERSION}
          docker push ${IMAGE_ID_VERSION}

  tag_image:
    ### only run while tag event is got
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Tag existed docker image
        run: |

          ###
          ### init variables
          ###
          SHA=${GITHUB_SHA:0:8}
          IMAGE_ID_SHA=${IMAGE_ID}:${SHA}
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,' | sed -e 's/^v//')
          IMAGE_ID_VERSION=${IMAGE_ID}:${VERSION}

          ###
          ### tag image and push
          ###
          echo IMAGE_ID_SHA: ${IMAGE_ID_SHA}
          docker pull ${IMAGE_ID_SHA}
          echo IMAGE_ID_VERSION: ${IMAGE_ID_VERSION}
          docker tag ${IMAGE_ID_SHA} ${IMAGE_ID_VERSION}
          docker push ${IMAGE_ID_VERSION}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: info
        run: |

          ###
          ### init variables
          ###
          VERSION=${GITHUB_SHA:0:8}
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,' | sed -e 's/^v//')
          IMAGE_ID_VERSION=${IMAGE_ID}:${VERSION}
          echo IMAGE_ID_VERSION: ${IMAGE_ID_VERSION}

          ###
          ### deploy service with docker-compose file
          ###
          echo --> ssh to remote host
          echo --> pull latest docker-compose from github
          echo --> pull target image based on IMAGE_ID_VERSION
          echo --> set up service by docker-compose

      - name: deploy to dev
        uses: appleboy/ssh-action@master
        continue-on-error: true ### TODO: remove me after remote host is configured well
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            echo --> do something on remote host
